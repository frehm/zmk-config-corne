/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_sv.h"

/ {
  behaviors {
      ht_tp: hold_tap_tap_preferred {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <100>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC/Å |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö |  Ä   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | ESC  |
//                    | SHFT| LWR | SPC |   | ENT | RSE  | ALT |
      bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P           &ht_tp SV_A_RING BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SV_O_UMLAUT &ht_tp SV_A_UMLAUT DEL
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH        &kp ESC
                  &kp LSHFT &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
      >;
    };

  lower_layer {
// numbers and symbols
// -----------------------------------------------------------------------------------------
// |  0   |  _  |  7  |  8  |  9  |  %  |   |  <  |  >  |  =  |  (  |  )  |  $  |
// | SHFT |  :  |  4  |  5  |  6  |  +  |   |  \  |  "  |  '  |  {  |  }  |  #  |
// | CTRL |  0  |  1  |  2  |  3  |  -  |   |  /  |  |  |  *  |  [  |  ]  |  @  |
//                    | SHFT|     | SPC |   | ENT |     | ALT |
    bindings = <
   &kp N0    &kp SV_UNDER &kp N7 &kp N8 &kp N9 &kp SV_PERCENT         &kp SV_LT    &kp SV_GT   &kp SV_EQUAL &kp SV_LPAR &kp SV_RPAR &kp SV_DOLLAR
   &kp LSHFT &kp SV_COLON &kp N4 &kp N5 &kp N6 &kp SV_PLUS            &kp SV_BSLH  &kp SV_DQT  &kp SV_SQT   &kp SV_LBRC &kp SV_RBRC &kp SV_HASH
   &kp LCTRL &kp N0       &kp N1 &kp N2 &kp N3 &kp SV_MINUS           &kp SV_SLASH &kp SV_PIPE &kp SV_STAR  &kp SV_LBKT &kp SV_RBKT &kp SV_AT
                              &kp LSHFT  &trans  &kp SPACE               &kp RET  &trans  &kp RALT
    >;
    };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// | SHFT |     |     |     |     |     |   | LFT | DWN | UP  | RGT |     |  ´  |
// | CTRL | BT1 | BT2 | BT3 | BT4 |BTCLR|   |  !  |  ?  |  ^  |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
  bindings = <
  &kp  F1   &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                                 &kp F7      &kp F8       &kp F9       &kp F10   &kp F11 &kp F12
  &kp LSHFT &trans &trans &trans &trans &trans                                 &kp LEFT    &kp DOWN     &kp UP       &kp RIGHT &trans  &kp SV_ACUTE
  &kp LCTRL &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR     &kp SV_EXCL &kp SV_QMARK &kp SV_CARET &trans    &trans  &trans
                            &kp LGUI  &trans  &kp SPACE                        &kp RET   &trans    &kp RALT
      >;
    };
  };
};
